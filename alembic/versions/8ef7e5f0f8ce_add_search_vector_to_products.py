"""add search vector to products

Revision ID: 8ef7e5f0f8ce
Revises: 8f410ce61160
Create Date: 2025-01-25 12:17:47.142750

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8ef7e5f0f8ce'
down_revision: Union[str, None] = '8f410ce61160'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.execute("""
    #     CREATE OR REPLACE FUNCTION update_product_search_vector() RETURNS TRIGGER AS $$
    #     BEGIN
    #         NEW.search_vector = to_tsvector(
    #             'simple',
    #             COALESCE(NEW.name, '') || ' ' ||
    #             COALESCE(NEW.description, '') || ' ' ||
    #             COALESCE((SELECT name FROM product_category WHERE category_id = NEW.category_id), '') || ' ' ||
    #             COALESCE((SELECT c.name FROM categories c JOIN product_category s ON c.category_id = s.category_id WHERE s.category_id = NEW.category_id), '')
    #         );
    #         RETURN NEW;
    #     END;
    #     $$ LANGUAGE plpgsql;
    # """)

    # # Создаем триггер, который вызывает функцию при вставке или обновлении
    # op.execute("""
    #     CREATE TRIGGER products_search_vector_update
    #     BEFORE INSERT OR UPDATE ON products
    #     FOR EACH ROW EXECUTE FUNCTION update_product_search_vector();
    # """)

    op.add_column('products', sa.Column('search_vector', postgresql.TSVECTOR(), nullable=True))
    op.execute("""
        UPDATE products
        SET search_vector = to_tsvector(
            'simple',
            COALESCE(name, '') || ' ' ||
            COALESCE(description, '') || ' ' ||
            COALESCE((SELECT name FROM product_category WHERE category_id = products.category_id), '') || ' ' ||
            COALESCE((SELECT c.name FROM categories c JOIN product_category s ON c.category_id = s.category_id WHERE s.category_id = products.category_id), '')
        );
    """)
    
    op.execute("""
        CREATE INDEX idx_products_search_vector ON products USING GIN (search_vector);
    """)
    op.alter_column('products', 'search_vector', existing_type=postgresql.TSVECTOR(), nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('products', 'search_vector')
    # ### end Alembic commands ###
